buildscript {
    ext.appengine_version = '1.9.60'
    ext.appengine_plugin_version = '1.3.4'
    ext.gretty_version = '2.0.0'

    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.cloud.tools:appengine-gradle-plugin:$appengine_plugin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "org.akhikhl.gretty:gretty:$gretty_version"
    }
}

apply plugin: 'kotlin'
//apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

group 'net.tkhamez.everoute'
version '0.0.1'
//mainClassName = "io.ktor.server.netty.EngineMain"

// appengine does not honor this property, so we are forced to use deep Maven tree layout
// webAppDirName = file('webapp')

// This task will generate your fat JAR and put it in the ./build/libs/ directory
shadowJar {
    manifest {
        attributes 'Main-Class': "io.ktor.server.netty.EngineMain"
    }
}

gretty {
    contextPath = '/'
    logbackConfigFile = 'resources/logback.xml'
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src/main/kotlin']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['src/main/resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlinx' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-server-sessions:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    compile "io.ktor:ktor-server-servlet:$ktor_version"
    //compile "org.slf4j:slf4j-jdk14:$slf4j_version"
    compile "com.google.cloud:google-cloud-firestore:0.60.0-beta"

    providedCompile "com.google.appengine:appengine:$appengine_version"
}

task run(dependsOn: appengineRun)

afterEvaluate {
    run.dependsOn(tasks.findByName("appRun"))
}
